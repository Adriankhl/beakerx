/*
 *  Copyright 2017 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

@import "bxvariables";

.bx-spark2-widget {
  flex: 1 1 auto;

  .bx-spark-start {
    padding: 4px 0;

    .bx-spark-error {

    }
  }

  .bx-spark-profile-selector {
    padding: 4px 0;
  }

  .bx-spark-session {
    padding: 4px 0;
  }

  .bx-spark-connect {
    margin-left:133px;
  }
  .bx-spark-hive {
    margin-left:133px;
  }
  .bx-spark-save {
    margin: 0 4px 0 10px;
  }

  .widget-dropdown select {
    width: 100%;
  }

  .widget-label {
    width: 123px;
    margin-right: 10px;
    text-align: right;
    vertical-align: bottom;
  }

  .widget-button {
    border: 1px solid #cccccc;
  }

  .bx-button {
    margin-top: 0;
    margin-bottom: 0;
    margin-left: 0;
  }

  $spinner_size: 28px;
  $spinner_radius: $spinner_size * .35;
  $spinner_width: $spinner_size * .08;
  $spinner_height: $spinner_size * .22;
  $spinner_color: none;
  $spinner_bgcolor: #000000;
  $spinner_speed: 1.2s;

  @keyframes lds-spinner {
    0% {
      opacity: 1
    }
    100% {
      opacity: 0
    }
  }

  .lds-spinner {
    color: $spinner_color;
    display: inline-block;
    position: relative;
    width: round($spinner_size);
    height: round($spinner_size);
    vertical-align: bottom;

    div {
      transform-origin: round($spinner_size * .5) round($spinner_size * .5);
      animation: lds-spinner $spinner_speed linear infinite;
      &:after {
        content: " ";
        display: block;
        position: absolute;
        top: round($spinner_size * .5 - $spinner_radius - $spinner_height * .5);
        left: round($spinner_size * .5 - $spinner_width * .5);
        width: round($spinner_width);
        height: round($spinner_height);
        border-radius: 20%;
        background: $spinner_bgcolor;
      }

      @for $i from 0 through 11 {
        &:nth-child(#{$i + 1}) {
          transform: rotate(#{$i * 30deg});
          animation-delay: ($spinner_speed * -1 * (11 - $i) / 12);
        }
      }
    }
  }

}
